import Collections.Mutable.LinkedList

fun accum(mun : int) : int
  mun + 1
end

fun useList(list : LinkedList[(int, String)]) : unit
  for elem <- list do
    print("{}", elem)
  end
end

active class Main
  def main() : unit

    var list  = new LinkedList[int]()
    list.append(1)
    list.append(2)
    list.append(3)

    var list2  = new LinkedList[String]()
    list2.append("katt")
    list2.append("katt")
    list2.append("katt")

    var acc = 0
    useList(for elem <- list, el <- list2 do
                    (elem, el)
            end)


    {-var list  = new LinkedList[int]()
    list.append(1)
    list.append(2)
    list.append(3)

    var list2  = new LinkedList[int]
    list2.append(5)
    list2.append(6)

    var list3 = for x <- list, y <- list2 do
                  x + y
                end

    for x <- list do
      print("{}\n", x)
    end

    for e <- list3 do
      print("{}", e)
    end-}


  end
end
